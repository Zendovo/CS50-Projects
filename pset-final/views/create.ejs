<!-- CSS -->
<link rel="stylesheet" type="text/css" href="/css/create.css">
<link rel="stylesheet" type="text/css" href="/css/slider.css">

<h1 class="mt-5 text-center">Create your schedule here!</h1>

<section class="flex-container schedule-create-container">

    <div class="bounds-container">

        <h3 class="mt-4 text-center">Working Hours</h3>
        <h7 class="text-center">The hours during which a meeting should be scheduled</h7><hr><br>

        <div id="time-range">
            <p>Schedule Bounds: <span class="slider-time">9:00 AM</span> - <span class="slider-time2">5:00 PM</span></p>

            <div class="sliders_step1">
                <div class="slider-range bounds-slider"></div>
            </div>
        </div>

    </div>
    
    <div class="meetings-container">

        <h3 class="mt-2 text-center">Meetings</h3>
        <h7 class="text-center">Meetings to be added in chronological order</h7><hr><br>

        <input type="number" id="meetings_count" value="0" hidden>

    </div>

    <div>
        <button class="btn btn-success" onclick="addMeeting()">+</button>
        <button class="btn btn-primary" onclick="previewMeeting()">Done</button>
    </div>

    <div class="preview container" hidden>

        <div class="schedule-bar">

        </div>

        <form style="text-align: center;">
            <input type="text" name="schedule" id="schedule" hidden>
            <button class="btn btn-success w-25" type="submit">Add</button>
        </form>

    </div>

    <script>

        function addMeeting() {
            
            var current = parseInt($('#meetings_count').val());
            var boundsSlider = $(".bounds-slider");
            var values = boundsSlider.slider("option", "values");

            var start = values[0]
            var end = values[1]

            var min;
            var max;

            if (current === 0) {
                
                // Set the min and max values to the bound values and disable the bounds slider
                
                min = start
                max = end

                boundsSlider.slider("disable");
                
            } else {

                // Set the min value to the end time of the last meeting
                
                var lastMeetingValues = $('.meeting-' + current).slider("option", "values");

                console.log(lastMeetingValues[1], end)

                // Check if the last value is equal to the end value of the bounds
                if (lastMeetingValues[1] === end)  {
                    alert('Hey! You have already filled all your time!')

                    return
                }

                min = lastMeetingValues[1]
                max = end

                $('.meeting-' + current).slider("disable");

                // Remove the remove-btn from the last meeting
                animateCSS('.remove-' + current, 'fadeOut', () => {
                    $('.remove-' + current).remove();
                })
                
            }

            $('#meetings_count').val(current + 1);

            var newSliderHTML = `<div class="animated bounceInLeft meeting-container-${current + 1}" id="time-range">
                                    <p>Meeting #${current + 1}: <span class="slider-time">9:00 AM</span> - <span class="slider-time2">5:00 PM</span>
                                        <button onclick="removeMeeting()" class="ml-2 btn btn-sm btn-danger remove-${current + 1}"> - </button>
                                    </p>

                                    <div class="sliders_step1">
                                        <div class="slider-range meeting-${current + 1}"></div>
                                    </div>
                                </div>`

            $('.meetings-container').append(newSliderHTML);

            $(".meeting-" + (current + 1)).slider({
                range: true,
                min,
                max,
                step: 1,
                values: [min, max],
                slide: function (e, ui) {

                    var sliderTime = e.target.parentElement.parentElement.children[0]

                    var hours1 = Math.floor(ui.values[0] / 60);
                    var minutes1 = ui.values[0] - (hours1 * 60);

                    if (hours1.length == 1) hours1 = '0' + hours1;
                    if (minutes1.length == 1) minutes1 = '0' + minutes1;
                    if (minutes1 == 0) minutes1 = '00';
                    if (hours1 >= 12) {
                        if (hours1 == 12) {
                            hours1 = hours1;
                            minutes1 = minutes1 + " PM";
                        } else {
                            hours1 = hours1 - 12;
                            minutes1 = minutes1 + " PM";
                        }
                    } else {
                        hours1 = hours1;
                        minutes1 = minutes1 + " AM";
                    }
                    if (hours1 == 0) {
                        hours1 = 12;
                        minutes1 = minutes1;
                    }

                    var m1 = parseInt(minutes1.substring(0, 2));
                    sliderTime.children[0].innerHTML = hours1 + ':' + (m1 < 10 && m1 !== 0 ? '0' + minutes1 : minutes1)

                    var hours2 = Math.floor(ui.values[1] / 60);
                    var minutes2 = ui.values[1] - (hours2 * 60);

                    if (hours2.length == 1) hours2 = '0' + hours2;
                    if (minutes2.length == 1) minutes2 = '0' + minutes2;
                    if (minutes2 == 0) minutes2 = '00';
                    if (hours2 >= 12) {
                        if (hours2 == 12) {
                            hours2 = hours2;
                            minutes2 = minutes2 + " PM";
                        } else if (hours2 == 24) {
                            hours2 = 11;
                            minutes2 = "59 PM";
                        } else {
                            hours2 = hours2 - 12;
                            minutes2 = minutes2 + " PM";
                        }
                    } else {
                        hours2 = hours2;
                        minutes2 = minutes2 + " AM";
                    }
                    
                    var m2 = parseInt(minutes2.substring(0, 2));
                    sliderTime.children[1].innerHTML = hours2 + ':' + (m2 < 10 && m2 !== 0 ? '0' + minutes2 : minutes2)
                }
            });
            
        }

        function removeMeeting() {

            var current = parseInt($('#meetings_count').val());

            const meeting =  document.querySelector('.meeting-container-' + current)
            meeting.classList.add('animated', 'bounceOutLeft')

            meeting.addEventListener('animationend', () => {

                meeting.remove();
                $('#meetings_count').val(current - 1);

            })

            var removeBtn = `<button onclick="removeMeeting()" class="ml-2 animated fadeIn btn btn-sm btn-danger remove-${current - 1}"> - </button>`

            $(`.meeting-container-${current - 1} > p`).append(removeBtn)
        }

        function animateCSS(element, animationName, callback) {
            const node = document.querySelector(element)
            node.classList.add('animated', animationName)

            function handleAnimationEnd() {
                node.classList.remove('animated', animationName)
                node.removeEventListener('animationend', handleAnimationEnd)

                if (typeof callback === 'function') callback()
            }

            node.addEventListener('animationend', handleAnimationEnd)
        }

    </script>

    <script>

        progressBar()

        function progressBar() {

            var schedule = [['9:30', '13:30'], ['13:45', '15:00'], ['18:00', '18:30']]
            var bounds = ['9:00', '19:00']

            // var lengths = [bound2first, firstMeeting, first2second, secondMeeting, second2third, thirdMeeting, last2bound]
            var lengths = []
            var percentages = []

            lengths.push(diffBetweenTimes(bounds[0], schedule[0][0]))

            schedule.forEach((meeting, index) => {

                lengths.push(diffBetweenTimes(meeting[0], meeting[1]))

                if (index === schedule.length - 1) {
                    return;
                }

                lengths.push(diffBetweenTimes(meeting[1], schedule[index + 1][0]))
                
            });

            lengths.push(diffBetweenTimes(bounds[1], schedule[schedule.length - 1][1]))

            var totalTime = diffBetweenTimes(bounds[0], bounds[1])
            lengths.forEach(length => {
                percentages.push(((length / totalTime) * 100))
            });

            var div = $('<div>', {class: 'progress w-75'}).css('margin', 'auto')
            
            percentages.forEach((per, index) => {
                
                if (index % 2 === 0) {
                    div.append(`<div class="progress-bar progress-bar-striped bg-success" role="progressbar" style="width: ${per}%"></div>`)
                } else {
                    div.append(`<div class="progress-bar progress-bar-striped" role="progressbar" style="width: ${per}%" aria-valuemin="0" aria-valuemax="100">${per}</div>`)
                }
                
            })
            
            $('main').append(div)

        }

        function compareTimes(t1, t2) {

            // Split the hour and the minute
            var [h1, m1] = t1.split(':');
            var [h2, m2] = t2.split(':');

            // Determine the total number of minutes
            // To make performing calculations easy
            t1 = parseInt(h1) * 60 + parseInt(m1);
            t2 = parseInt(h2) * 60 + parseInt(m2);

            if (t1 < t2) {
                return - 1;
            } else if (t1 > t2) {
                return 1;            
            } else {
                return 0;
            }
        }

        function diffBetweenTimes(t1, t2) {

            // Split the hour and the minute
            var [h1, m1] = t1.split(':');
            var [h2, m2] = t2.split(':');

            // Determine the total number of minutes
            // To make performing calculations easy
            t1 = parseInt(h1) * 60 + parseInt(m1);
            t2 = parseInt(h2) * 60 + parseInt(m2);

            return Math.abs(t1 - t2);

        }

    </script>

    <script>
        $(".slider-range").slider({
            range: true,
            min: 0,
            max: 1440,
            step: 1,
            values: [540, 1020],
            slide: function (e, ui) {

                var sliderTime = e.target.parentElement.parentElement.children[0]

                var hours1 = Math.floor(ui.values[0] / 60);
                var minutes1 = ui.values[0] - (hours1 * 60);

                if (hours1.length == 1) hours1 = '0' + hours1;
                if (minutes1.length == 1) minutes1 = '0' + minutes1;
                if (minutes1 == 0) minutes1 = '00';
                if (hours1 >= 12) {
                    if (hours1 == 12) {
                        hours1 = hours1;
                        minutes1 = minutes1 + " PM";
                    } else {
                        hours1 = hours1 - 12;
                        minutes1 = minutes1 + " PM";
                    }
                } else {
                    hours1 = hours1;
                    minutes1 = minutes1 + " AM";
                }
                if (hours1 == 0) {
                    hours1 = 12;
                    minutes1 = minutes1;
                }

                var m1 = parseInt(minutes1.substring(0, 2));
                sliderTime.children[0].innerHTML = hours1 + ':' + (m1 < 10 && m1 !== 0 ? '0' + minutes1 : minutes1)

                var hours2 = Math.floor(ui.values[1] / 60);
                var minutes2 = ui.values[1] - (hours2 * 60);

                if (hours2.length == 1) hours2 = '0' + hours2;
                if (minutes2.length == 1) minutes2 = '0' + minutes2;
                if (minutes2 == 0) minutes2 = '00';
                if (hours2 >= 12) {
                    if (hours2 == 12) {
                        hours2 = hours2;
                        minutes2 = minutes2 + " PM";
                    } else if (hours2 == 24) {
                        hours2 = 11;
                        minutes2 = "59 PM";
                    } else {
                        hours2 = hours2 - 12;
                        minutes2 = minutes2 + " PM";
                    }
                } else {
                    hours2 = hours2;
                    minutes2 = minutes2 + " AM";
                }
                
                var m2 = parseInt(minutes2.substring(0, 2));
                sliderTime.children[1].innerHTML = hours2 + ':' + (m2 < 10 && m2 !== 0 ? '0' + minutes2 : minutes2)
            }
        });
    </script>

</section>